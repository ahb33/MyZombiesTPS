Overview: instead of finding location of barrel of weapon we need to get location of crosshair to shoot where we are aiming. 
Until then we will perform trace from center of screen outward from weapon class

We need hit result for result of line trace. pass it in as parameter for the line trace function. 
This function will fill in that HitResult and will have all information related to trace including impact point
void CrossHairTrace(FHitResult& TraceHitResult) - Structure containing information about one hit of a trace, 
such as point of impact and surface normal at that point.


after you find x,y coordinates of center of screen then project to world space. 
DeprojectScreenToWorld is a bool function that traces a ray against the world using a specific channel and 
returns the first blocking hit
(
    struct FHitResult & OutHit,
    const FVector & Start,
    const FVector & End,
    ECollisionChannel TraceChannel,
    const FCollisionQueryParams & Params,
    const FCollisionResponseParams & ResponseParam
) 




void HitResult(FHitResult& TraceHitResult)
Check if GEngine is valid and if GEngine->GameViewport is valid
FVector2D ViewportSize - 
Get Viewport size (ViewportSize) - GEngine->GameViewport has function to get the ViewportSize and it takes a 2D FVector
Set CrosshairLocation to be x,y coordinates of ViewportSize

Deproject coordinates to world space
If projection successful
Create Start and End vectors for line trace - LineTraceSingleByChannel is function used 


if no blocking hit on TraceHitResult
set ImpactPoint to end vector  (ImpactPoint is FVector in the world position of line trace if we hit something)

else 
draw debug sphere 



set tick to true in weapon function to call Trace function every frame



